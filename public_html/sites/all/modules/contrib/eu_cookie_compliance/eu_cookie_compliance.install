<?php

/**
 * @file
 * Installation file.
 */

/**
 * Implements hook_install().
 */
function eu_cookie_compliance_install() {

  $default_filter_format = filter_default_format();
  if ($default_filter_format == 'filtered_html') {
    $default_filter_format = 'full_html';
  }

  $cookie_policy = _eu_cookie_compliance_find_privacy_policy();
  if (!$cookie_policy) {
    $cookie_policy = '<front>';
  }

  $popup_settings = array(
    'popup_info' => array(
      'value' => '<h2>We use cookies on this site to enhance your user experience</h2><p>By clicking any link on this page you are giving your consent for us to set cookies.</p>',
      'format' => $default_filter_format,
    ),
    'popup_agreed' => array(
      'value' => '<h2>Thank you for accepting cookies</h2><p>You can now hide this message or find out more about cookies.</p>',
      'format' => $default_filter_format,
    ),
    'popup_enabled' => TRUE,
    'popup_position' => FALSE,
    'popup_bg_hex' => '0779bf',
    'popup_text_hex' => 'fff',
    'popup_agreed_enabled' => FALSE,
    'popup_height' => '',
    'popup_width' => '100%',
    'popup_delay' => 1000,
    'popup_link' => $cookie_policy,
    'fixed_top_position' => TRUE,
  );
  variable_set('eu_cookie_compliance', $popup_settings);

  // Enable banner for all roles.
  $roles = user_roles();
  $permission = 'display EU Cookie Compliance popup';
  foreach ($roles as $rid => $value) {
    user_role_grant_permissions($rid, array($permission));
  }
}

/**
 * Implements hook_uninstall().
 */
function eu_cookie_compliance_uninstall() {
  variable_del('eu_cookie_compliance');
  cache_clear_all('variables', 'cache');
}

/**
 * Implements hook_requirements().
 */
function eu_cookie_compliance_requirements($phase) {
  $requirements = array();
  $settings = variable_get('eu_cookie_compliance');

  if ($settings['popup_link'] == '<front>' && $settings['show_disagree_button']) {
    $requirements['eu_cookie_compliance'] = array(
      'title' => t('EU Cookie Compliance'),
      'severity' => REQUIREMENT_ERROR,
      'description' => t('Your privacy policy link is pointing at the front page. This is the default value after installation, and unless your privacy policy is actually posted at the front page, you will need to create a separate page for the privacy policy and link to that page.'),
    );
    if ($phase == 'runtime') {
      $requirements['eu_cookie_compliance'] += array(
        'value' => t('Privacy Policy link not provided'),
      );
    }
  }

  return $requirements;
}

/**
 * Change the banner sliding animation time from seconds to milliseconds.
 */
function eu_cookie_compliance_update_7000(&$sandbox = NULL) {
  global $language;
  if (module_exists('locale')) {
    $languages = locale_language_list();
    foreach ($languages as $key => $current_language) {
      $eu_cookie_settings = variable_get('eu_cookie_compliance_' . $key, array());
      if (!empty($eu_cookie_settings['popup_delay'])) {
        $eu_cookie_settings['popup_delay'] *= 1000;
        variable_set('eu_cookie_compliance_' . $key, $eu_cookie_settings);
      }
    }
  }
  else {
    $current_language = ($language->language) ? $language->language : 'en';
    $eu_cookie_settings = variable_get('eu_cookie_compliance_' . $current_language, array());
    if (!empty($eu_cookie_settings['popup_delay'])) {
      $eu_cookie_settings['popup_delay'] *= 1000;
      variable_set('eu_cookie_compliance_' . $current_language, $eu_cookie_settings);
    }
  }
}

/**
 * Migrate translation handling to Variable API.
 * NOTE: Make sure the variable_realm and i18n_variable modules are either
 * enabled or in the filesystem if you are using multiple languages.
 */
function eu_cookie_compliance_update_7001(&$sandbox) {
  $languages = language_list();
  $variable_names = db_query("SELECT name FROM {variable} WHERE name LIKE '%eu_cookie_compliance_%' AND name NOT IN('eu_cookie_compliance_domain', 'eu_cookie_compliance_cookie_lifetime')")->fetchCol();
  if (count($variable_names) === 1) {
    // We only have one language.
    $name = reset($variable_names);
    $value = variable_get($name);
    variable_del($name);
    variable_set('eu_cookie_compliance', $value);
  }
  else {
    // Multiple languages, need to install variable_realm module.
    $variable_exists = TRUE;
    if (!module_exists('variable_realm') || !module_exists('i18n_variable')) {
      $variable_exists = module_enable(array('variable_realm', 'i18n_variable'));
    }
    if ($variable_exists) {
      foreach ($variable_names as $name) {
        $langcode = str_replace('eu_cookie_compliance_', '', $name);
        if (isset($languages[$langcode])) {
          $value = variable_get($name);
          variable_realm_set('language', $langcode, 'eu_cookie_compliance', $value);
          variable_del($name);
        }
      }
      // i18n_variable requires an entry in the variable table.
      variable_set('eu_cookie_compliance', $value);
      // Enable translation variables for EU Cookie Compliance.
      $controller = variable_realm_controller('language');
      $old_variables = $controller->getEnabledVariables();
      $old_list = variable_children($old_variables);
      $variables = array_merge($old_list, array('eu_cookie_compliance'));
      $controller->setRealmVariable('list', $variables);
    }
    else {
      throw new DrupalUpdateException('EU Cookie Compliance now requires the modules variable ( https://www.drupal.org/project/variable ) and i18n ( https://www.drupal.org/project/i18n ) for multilingual sites. Please add these modules to your site.');
    }
  }
  cache_clear_all('variables', 'cache');
}

/**
 * Delete the menu item that was added due to a missing menu item type in 1.15.
 */
function eu_cookie_compliance_update_7002(&$sandbox) {
  db_query('delete from {menu_links} where link_path = \'eu-cookie-compliance-check\'');
}

/**
 * Clear cache for only the settings of this module, to initialize new module settings.
 */
function eu_cookie_compliance_update_7003(&$sandbox) {
  eu_cookie_compliance_clear_caches();
}

/**
 * Version 1.21. Clear cache for only the settings of this module.
 */
function eu_cookie_compliance_update_7004(&$sandbox) {
  eu_cookie_compliance_clear_caches();
}
