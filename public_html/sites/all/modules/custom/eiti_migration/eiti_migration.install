<?php

/**
 * Implements hook_install().
 */
function eiti_migration_install() {
  // Prepare our folders.
  $spreadsheets_path = 'public://spreadsheets';
  if (!file_exists($spreadsheets_path)) {
    drupal_mkdir($spreadsheets_path);
  }
  file_prepare_directory($spreadsheets_path);

  $spreadsheets_temporary_path = 'public://spreadsheets_temporary';
  if (!file_exists($spreadsheets_temporary_path)) {
    drupal_mkdir($spreadsheets_temporary_path);
  }
  file_prepare_directory($spreadsheets_temporary_path);

  $migrated_img = 'public://migrated_images';
  if (!file_exists($migrated_img)) {
    drupal_mkdir($migrated_img);
  }
  file_prepare_directory($migrated_img);

  $migrated_files = 'public://migrated_files';
  if (!file_exists($migrated_files)) {
    drupal_mkdir($migrated_files);
  }
  file_prepare_directory($migrated_files);
}

/**
 * Make sure all directories required for the migration exist.
 */
function eiti_migration_update_7001(&$sandbox) {
  // Prepare our folders.
  $spreadsheets_path = 'public://spreadsheets';
  if (!file_exists($spreadsheets_path)) {
    drupal_mkdir($spreadsheets_path);
  }
  file_prepare_directory($spreadsheets_path);

  $spreadsheets_temporary_path = 'public://spreadsheets_temporary';
  if (!file_exists($spreadsheets_temporary_path)) {
    drupal_mkdir($spreadsheets_temporary_path);
  }
  file_prepare_directory($spreadsheets_temporary_path);

  $migrated_img = 'public://migrated_images';
  if (!file_exists($migrated_img)) {
    drupal_mkdir($migrated_img);
  }
  file_prepare_directory($migrated_img);
}

/**
 * Make sure all directories required for the migration exist.
 */
function eiti_migration_update_7002(&$sandbox) {
  $migrated_files = 'public://migrated_files';
  if (!file_exists($migrated_files)) {
    drupal_mkdir($migrated_files);
  }
  file_prepare_directory($migrated_files);
}

/**
 * Clean up commodities.
 */
function eiti_migration_update_7003(&$sandbox) {
  drupal_set_time_limit(7200); // 2 hours.
  // Sector information has been imported as commodities, there are a lot of duplicates and none of them are linked with any organisations
  // so it should be a good idea to delete and later properly (re)import them all.
  $vocabulary = taxonomy_vocabulary_machine_name_load('company_commodities');
  $commodity_ids = db_select('taxonomy_term_data', 'td')
    ->condition('td.vid', $vocabulary->vid)
    ->fields('td', array('tid'))
    ->execute()
    ->fetchCol();
  if ($commodity_ids) {
    entity_delete_multiple('taxonomy_term', $commodity_ids);
  }
}

/**
 * Import missing organisation data from existing summary data Excel files.
 */
function eiti_migration_update_7004(&$sandbox) {
  drupal_set_time_limit(3600); // 1 hour.
  // Existing Excel migration functionality doesn't look like a good working fit
  // for a small-scale update of all existing companies so we handle this separately.
  // Based on functionality from eiti_migration.companies.inc, eiti_migration.spreadsheet.inc files.
  if (!isset($sandbox['progress'])) {
    // The update process starts fast and slows down considerably over time.
    // We'll keep the progress saved in a variable so it can be restarted where it left off.
    $summary_data = variable_get('eiti_migration_temp_summary_data', FALSE);

    if (!$summary_data) {
      $summary_data = db_select('eiti_summary_data', 'sd');
      $summary_data->innerJoin('field_data_field_sd_report_file', 'sd_rf', 'sd.id = sd_rf.entity_id');
      $summary_data->innerJoin('file_managed', 'fm', 'sd_rf.field_sd_report_file_fid = fm.fid');
      $summary_data->fields('sd', array('id', 'country_id'))
        ->fields('fm', array('uri'))
        ->orderBy('year_start', 'ASC')
        ->orderBy('id', 'ASC');
      $summary_data =  $summary_data->execute()->fetchAll();
      variable_set('eiti_migration_temp_summary_data', $summary_data);
    }

    $sandbox['progress'] = 0;
    $sandbox['max'] = count($summary_data);
    $sandbox['summary_data'] = $summary_data;
  }

  if ($sandbox['summary_data']) {
    $limit = 10;
    $counter = 0;
    libraries_load('PHPExcel');
    foreach ($sandbox['summary_data'] as $sd_key => $sd) {
      $counter++;
      if (file_exists($sd->uri)) {
        $summary_source_id = db_select('migrate_map_eitisummarydatamigration', 'sm')
          ->condition('sm.destid1', $sd->id)
          ->fields('sm', array('sourceid1'))
          ->execute()
          ->fetchField();

        $file_path = drupal_realpath($sd->uri);
        $type = PHPExcel_IOFactory::identify($file_path);
        $reader = PHPExcel_IOFactory::createReader($type);
        $reader->setLoadAllSheets();
        $excel = $reader->load($file_path);
        $revenuesSheet = eiti_migration_getSheet($excel, 'revenues');

        if ($summary_source_id && !empty($revenuesSheet)) {
          // Now let's parse the file.
          $highestColumn = $revenuesSheet->getHighestColumn();
          $highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);

          // Defaults.
          $start_row = 3;
          $start_column = 8;

          // Find the "Companies" (Adjusting defaults).
          if ($position = eiti_migration_findPositionInSheet($revenuesSheet, array('c. companies', 'companies'))) {
            $value = trim($revenuesSheet->getCellByColumnAndRow($position['column'], $position['row'] + 1)->getValue());
            if (strtolower($value) == 'legal name') {
              $start_row = $position['row'] + 1;
            }
            else {
              $value = trim($revenuesSheet->getCellByColumnAndRow($position['column'], $position['row'] + 2)->getValue());
              if (strtolower($value) == 'legal name') {
                $start_row = $position['row'] + 2;
              }
            }
            $start_column = $position['column'] + 1;
          }

          // Newer Excel files have sector before commodities.
          $commodity_row = $start_row + 2;
          $sector_row = FALSE;
          $value = trim($revenuesSheet->getCellByColumnAndRow($position['column'], $start_row + 2)->getValue());
          if (strtolower($value) == 'sector') {
            $sector_row = $commodity_row;
            $commodity_row = $commodity_row + 1;
          }

          // Now let's walk through the right cells.
          for ($column = $start_column; $column < $highestColumnIndex; $column++) {
            $nameCellValue = trim($revenuesSheet->getCellByColumnAndRow($column, $start_row)->getValue());
            $idCellValue = trim($revenuesSheet->getCellByColumnAndRow($column, $start_row + 1)->getFormattedValue());
            if ($sector_row !== FALSE) {
              $sectorCell = $revenuesSheet->getCellByColumnAndRow($column, $sector_row);
              if ($sectorCell->isFormula()) {
                $sectorCellValue = $sectorCell->getFormattedValue();
              }
              else {
                $sectorCellValue = $sectorCell->getValue();
              }
            }
            $commoditiesCell = $revenuesSheet->getCellByColumnAndRow($column, $commodity_row);
            if ($commoditiesCell->isFormula()) {
              $commoditiesCellValue = $commoditiesCell->getFormattedValue();
            }
            else {
              $commoditiesCellValue = $commoditiesCell->getValue();
            }

            if (!empty($nameCellValue)) {
              $org_ids = db_select('migrate_map_eiticompaniesmigration', 'cm')
                ->condition('cm.sourceid1', db_like($summary_source_id . ':') . '%', 'LIKE')
                ->isNotNull('cm.destid1')
                ->fields('cm', array('destid1'))
                ->execute()
                ->fetchCol();
              if ($org_ids) {
                foreach ($org_ids as $org_id) {
                  $org = entity_load_single('organisation', $org_id);
                  if ($org && $org->country_id == $sd->country_id && $org->type == 'company') {
                    if (!eiti_migration_checkEmptyValue($idCellValue)) {
                      $org->identification_number = $idCellValue;
                    }
                    $org->summary_data_id = $sd->id;
                    if (isset($sectorCellValue) && !eiti_migration_checkEmptyValue($sectorCellValue)) {
                      $sector_tid = eiti_migration_get_sector_tid($sectorCellValue);
                      if ($sector_tid) {
                        $org->field_o_sector = array();
                        $org->field_o_sector['und'][0]['target_id'] = $sector_tid;
                      }
                    }
                    if (!eiti_migration_checkEmptyValue($commoditiesCellValue)) {
                      $commodity_tids = eiti_migration_get_commodity_tids($commoditiesCellValue);
                      if ($commodity_tids) {
                        $org->field_o_commodities = array();
                        foreach ($commodity_tids as $commodity_tid) {
                          $org->field_o_commodities['und'][]['target_id'] = $commodity_tid;
                        }
                      }
                    }
                    entity_save('organisation', $org);
                  }
                }
              }
            }
          }
        }
      }
      $sandbox['progress']++;
      unset($sandbox['summary_data'][$sd_key]);
      variable_set('eiti_migration_temp_summary_data', $sandbox['summary_data']);
      if ($counter >= $limit) {
        break;
      }
    }
  }

  if ($sandbox['progress'] >= $sandbox['max']) {
    $sandbox['#finished'] = TRUE;
    variable_del('eiti_migration_temp_summary_data');
  }
  else {
    $sandbox['#finished'] = ($sandbox['progress'] / $sandbox['max']);
  }
}
