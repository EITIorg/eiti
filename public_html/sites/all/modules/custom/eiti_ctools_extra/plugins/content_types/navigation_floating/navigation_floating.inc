<?php

/**
 * @file
 * Ctools Plugin (content-type aka ctools panel pane).
 *
 * What is the difference between these ctools content_types vs contentwidget (with predefined_widgets):
 *  - You don't need to re-use instances of these widgets, but you can re-use the widget itself.
 *  - You don't need to create instances (and bundles, and fields, and.. etc).
 *  - The clearer UI of the Ctools Dialog Form (we can put them in a separate bucket).
 */

/**
 * Plugins are described by creating a $plugin array which will be used
 * by the system that includes this file.
 */
$plugin = array(
  'title' => t('Navigation: Floating'),
  'description' => t('Add a floating navigation, auto-generated by present widgets (on the page).'),
  'category' => t('Widget Library'),
  'edit form' => 'eiti_ctools_extra__navigation_floating__edit_form',
  'icon' => drupal_get_path('module', 'contentwidget') . '/icon-eiti-base.png',
  'render callback' => 'eiti_ctools_extra__navigation_floating__render',
  'render last' => TRUE,
  'single' => TRUE,
  'defaults' => array(
    'use_smooth_transition' => TRUE,
    'use_position_tracking' => TRUE,
    'animation_in' => 'fadeIn',
    'animation_out' => 'fadeOut',
    'pane_properties' => array(),
  ),
);

/**
 * Output function for the 'Navigation Floating' content type.
 */
function eiti_ctools_extra__navigation_floating__render($subtype, $conf, $panel_args, $context) {
  $block = new stdClass();
  $theme = 'eiti';

  // We'll need the logo as a link, so let's craft it out.
  $theme_path = drupal_get_path('theme', $theme);
  $logo_path = theme_get_setting('logo_path', $theme);
  $file_path = drupal_realpath($logo_path);
  $site_name = filter_xss_admin(variable_get('site_name', 'EITI.org Homepage'));
  if (file_exists($file_path)) {
    $logo_markup['png'] = array(
      '#theme' => 'image',
      '#path' => file_create_url($logo_path),
      '#alt' => '',
      '#attributes' => array(
        'role' => 'presentation',
        'class' => array('site-logo'),
      ),
    );
  }
  else {
    $logo_alt = $site_name;
    $logo_markup['svg'] = array(
      '#theme' => 'image',
      '#path' => file_create_url($theme_path . '/logo.svg'),
      '#alt' => $logo_alt,
      '#attributes' => array(
        'role' => 'presentation',
        'class' => array('site-logo'),
      ),
      '#prefix' => "<!--[if (gte IE 9)|!(IE)]><!-->",
      '#suffix' => "<!--<![endif]-->",
    );
    $logo_markup['png'] = array(
      '#theme' => 'image',
      '#path' => file_create_url($theme_path . '/logo.png'),
      '#alt' => $logo_alt,
      '#attributes' => array(
        'role' => 'presentation',
        'class' => array('site-logo'),
      ),
      '#prefix' => "<!--[if lt IE 9 ]>",
      '#suffix' => "<![endif]-->",
    );
  }



  // Store the correct order of panes.
  $conf['pane_order'] = array_keys($conf['pane_properties']);

  // We need this because we store the JS init file in the plugin folder.
  $plugin_info = ctools_get_plugins('ctools', 'content_types', $subtype);

  // Check if we need to add any other libraries.
  libraries_load('waypoints', 'minified');

  // Add our init js.
  drupal_add_js($plugin_info['path'] . '/navigation_floating.js');

  $navigation_id = drupal_html_id('navigation_floating');
  $content = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('navigation-wrapper')
    ),
  );
  $content['navigation'] = array(
    '#type' => 'container',
    '#weight' => 10,
    '#attributes' => array(
      'id' => $navigation_id,
      'class' => array(
        'navigation-floating',
      )
    )
  );
  $content['logo'] = $logo_markup;

  // Send settings via JS.
  $widget_js_settings = $conf;
  drupal_add_js(array('eitiNavigationFloating' => $widget_js_settings), 'setting');
  $block->content = $content;

  return $block;
}

/**
 * Returns an edit form for site stats (don't really need for now).
 *
 * @TODO: make configurable stats.
 */
function eiti_ctools_extra__navigation_floating__edit_form($form, &$form_state) {
  $conf = $form_state['conf'];
  $display = $form_state['display'];

  $pane_elements = array();
  foreach ($display->content as $pane_id => $pane) {
    if (!is_numeric($pane_id) && $pane->type !== 'navigation_floating') {
      drupal_set_message(t('Please make sure you have saved the page widgets and the page itself, <strong>before</strong> adding the Floating Navigation.'), 'warning');
      continue;
    }
    elseif ($pane->type == 'navigation_floating' || $pane->type == 'minimalistic-header') {
      continue;
    }
    if ($pane->type == 'fieldable_panels_pane') {
      // In this case, let's load the entity and checkout its title.
      list(, $fpp_id) = explode(':', $pane->subtype);
      $fpp_entity = fieldable_panels_panes_load($fpp_id);
      $pane_elements[] = array($pane_id => $fpp_entity->title . ' (' . $fpp_entity->bundle . ')');
    }
    else {
      // Ah, it's probably the standard ctools plugin (like a map), let's load the plugin then.
      $plugin_info = ctools_get_plugins('ctools', 'content_types', $pane->subtype);
      $pane_elements[] = array(
        $pane_id => $plugin_info['title'] . ' (' . $plugin_info['name'] . ')'
      );
    }
  }

  // Now that everything is prepared, let's build.
  $form['display_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Display Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['display_settings']['animation_in'] = array(
    '#type' => 'select',
    '#title' => t('Appear Animation'),
    '#options' => array(
      'fadeIn' => t('Fade In'),
    ),
    '#default_value' => $conf['animation_in']
  );
  $form['display_settings']['animation_out'] = array(
    '#type' => 'select',
    '#title' => t('Disappear Animation'),
    '#options' => array(
      'fadeOut' => t('Fade Out'),
    ),
    '#default_value' => $conf['animation_out']
  );
  $form['display_settings']['use_position_tracking'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use position tracking'),
    '#description' => t('Do you want to use the scroll position tracking? (highlighting the current viewed widget)'),
    '#default_value' => $conf['use_position_tracking'],
  );
  $form['display_settings']['use_smooth_transition'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use smooth transition'),
    '#description' => t('Do you want to use the smooth (animated) transition, on item click?'),
    '#default_value' => $conf['use_smooth_transition'],
  );

  $form['navigation'] = array(
    '#type' => 'fieldset',
    '#title' => t('Navigation Setup'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  foreach ($pane_elements as $index => $pane_details) {
    $pane_id = key($pane_details);
    $pane_title = $pane_details[$pane_id];

    $form['navigation']['nav_item_' . $pane_id] = array(
      '#type' => 'fieldset',
      '#title' => $pane_title,
      '#collapsed' => TRUE,
      '#collapsible' => TRUE,
    );
    $form['navigation']['nav_item_' . $pane_id]['nav_item_exclude_' . $pane_id] = array(
      '#type' => 'checkbox',
      '#title' => t('Exclude this widget'),
      '#description' => t('If you want to exclude this widget, check this box.'),
      '#default_value' => isset($conf['pane_properties'][$pane_id]['exclude']) ? $conf['pane_properties'][$pane_id]['exclude'] : FALSE,
    );
    $form['navigation']['nav_item_' . $pane_id]['nav_item_override_' . $pane_id] = array(
      '#type' => 'textfield',
      '#title' => t('Override the widget title'),
      '#description' => t('If you want to override the default widget title, please specify one here. Leave this blank if you don\'t want to override.'),
      '#default_value' => isset($conf['pane_properties'][$pane_id]['override']) ? $conf['pane_properties'][$pane_id]['override'] : FALSE,
    );
    $form['navigation']['nav_item_' . $pane_id]['nav_item_is_second_' . $pane_id] = array(
      '#type' => 'checkbox',
      '#title' => t('This is a sub-item'),
      '#description' => t('If you want this widget to be considered a sub-item (not the parent item), check this box.'),
      '#default_value' => isset($conf['pane_properties'][$pane_id]['second']) ? $conf['pane_properties'][$pane_id]['second'] : FALSE,
    );
  }

  // Stash this for later use.
  $form['pane_elements'] = array(
    '#type' => 'value',
    '#value' => array_values($pane_elements),
  );


  // Empty so that we can have title override.
  return $form;
}


/**
 * Submit form callback.
 */
function eiti_ctools_extra__navigation_floating__edit_form_submit($form, &$form_state) {
  $conf = $form_state['conf'];

  // Remove unneeded values.
  form_state_values_clean($form_state);
  $values = $form_state['values'];

  // Save the normal items.
  foreach ($values as $key => $value) {
    if (in_array($key, array_keys($conf))) {
      $form_state['conf'][$key] = $value;
    }
  }

  // Now let's process the pane properties.
  $pane_properties = array();
  if (!empty($values['pane_elements'])) {
    foreach ($values['pane_elements'] as $index => $pane_details) {
      $pane_id = key($pane_details);
      $pane_properties[$pane_id]['override'] = $values['nav_item_override_' . $pane_id];
      $pane_properties[$pane_id]['second'] = $values['nav_item_is_second_' . $pane_id];
      $pane_properties[$pane_id]['exclude'] = $values['nav_item_exclude_' . $pane_id];
    }
  }
  $form_state['conf']['pane_properties'] = $pane_properties;
}
