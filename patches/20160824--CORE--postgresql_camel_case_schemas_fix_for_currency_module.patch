diff --git a/public_html/includes/database/pgsql/schema.inc b/public_html/includes/database/pgsql/schema.inc
index f5774de..86fb78c 100644
--- a/public_html/includes/database/pgsql/schema.inc
+++ b/public_html/includes/database/pgsql/schema.inc
@@ -124,7 +124,7 @@ class DatabaseSchema_pgsql extends DatabaseSchema {
 
     $sql_keys = array();
     if (isset($table['primary key']) && is_array($table['primary key'])) {
-      $sql_keys[] = 'PRIMARY KEY (' . implode(', ', $table['primary key']) . ')';
+      $sql_keys[] = 'PRIMARY KEY ("' . implode('", "', $table['primary key']) . '")';
     }
     if (isset($table['unique keys']) && is_array($table['unique keys'])) {
       foreach ($table['unique keys'] as $key_name => $key) {
@@ -175,7 +175,7 @@ class DatabaseSchema_pgsql extends DatabaseSchema {
    *    The field specification, as per the schema data structure format.
    */
   protected function createFieldSql($name, $spec) {
-    $sql = $name . ' ' . $spec['pgsql_type'];
+    $sql = '"' . $name . '" ' . $spec['pgsql_type'];
 
     if (isset($spec['type']) && $spec['type'] == 'serial') {
       unset($spec['not null']);
@@ -441,7 +441,7 @@ class DatabaseSchema_pgsql extends DatabaseSchema {
       throw new DatabaseSchemaObjectExistsException(t("Cannot add primary key to table @table: primary key already exists.", array('@table' => $table)));
     }
 
-    $this->connection->query('ALTER TABLE {' . $table . '} ADD PRIMARY KEY (' . implode(',', $fields) . ')');
+    $this->connection->query('ALTER TABLE {' . $table . '} ADD PRIMARY KEY ("' . implode('","', $fields) . '")');
   }
 
   public function dropPrimaryKey($table) {
diff --git a/public_html/includes/database/query.inc b/public_html/includes/database/query.inc
index c9c5a83..0333104 100644
--- a/public_html/includes/database/query.inc
+++ b/public_html/includes/database/query.inc
@@ -1856,7 +1856,13 @@ class DatabaseCondition implements QueryConditionInterface, Countable {
                 $placeholders[] = $placeholder;
               }
             }
-            $condition_fragments[] = ' (' . $connection->escapeField($condition['field']) . ' ' . $operator['operator'] . ' ' . $operator['prefix'] . implode($operator['delimiter'], $placeholders) . $operator['postfix'] . ') ';
+            // HACK: Fix currency.module on PostgreSQL.
+            // @see: https://www.drupal.org/node/2007388
+            $escaped_field = $connection->escapeField($condition['field']);
+            if (in_array($escaped_field, array('ISO4217Code', 'ISO4217Number'))) {
+              $escaped_field = '"'. $escaped_field . '"';
+            }
+            $condition_fragments[] = ' (' . $escaped_field . ' ' . $operator['operator'] . ' ' . $operator['prefix'] . implode($operator['delimiter'], $placeholders) . $operator['postfix'] . ') ';
           }
         }
       }
